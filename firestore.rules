rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserAuthorized(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isOrganizer() {
      return getUserData().role == 'organizer';
    }
    
    function belongsToOrganization(orgId) {
      return getUserData().organization == orgId;
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isUserAuthorized(userId);
    }
    
    match /organizations/{orgId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOrganizer();
    }
    
    match /events/{eventId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && isOrganizer();
    }
    
    match /teams/{teamId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOrganizer();
    }
  }
}